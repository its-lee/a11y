{
  "compilerOptions": {
    "target": "esnext",
    "module": "esnext",
    "strict": true,
    "jsx": "preserve",
    "importHelpers": true,
    "moduleResolution": "node",
    "skipLibCheck": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "sourceMap": true,
    "baseUrl": ".",
    "resolveJsonModule": true,
    "allowUnreachableCode": false,
    "allowUnusedLabels": false,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": true,
    "noImplicitOverride": true,
    "noImplicitReturns": true,
    "noImplicitThis": true,
    "noUncheckedIndexedAccess": true,
    "noUnusedLocals": true,
    "useUnknownInCatchVariables": true,
    "forceConsistentCasingInFileNames": true,
    // Ensure that each file can be safely transpiled without relying on other imports.
    // This is especially important for library code built with vite / rollup - see https://vitejs.dev/guide/features.html#isolatedmodules
    "isolatedModules": true,
    // By default, we use typescript as a linter only as it's too slow and not optimizing as a
    // bundler. We instead use tsup or vite which use rollup & esbuild under the hood.
    "noEmit": true,
    "paths": {
      "@/*": ["src/*"]
    },
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"]
  }
}
